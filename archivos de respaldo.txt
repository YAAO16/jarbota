app.py
--------------------------------------------
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, send_from_directory
from flask_cors import CORS
from db import get_connection  # Asegúrate de importar execute_query
from werkzeug.utils import secure_filename
from datetime import datetime

SECRET_KEY = "miclavesecreta"

app = Flask(__name__, static_folder="frontend", static_url_path="")
CORS(app)
app.secret_key = SECRET_KEY

@app.route("/test-db")
def test_db():
    conn = get_connection()
    if conn and conn.is_connected():
        return "✅ Conexión a la base de datos exitosa"
    else:
        return "❌ Fallo la conexión a la base de datos"

@app.route('/', methods=['GET'])
def index():
    return redirect(url_for('registro'))

@app.route('/registro', methods=['GET', 'POST'])
def registro():
    mensaje = None
    if request.method == 'POST':
        numero_documento = request.form.get('numero_documento')
        nombrecompleto = request.form['nombrecompleto']
        tipo_persona = request.form['tipo_persona']
        vinculacion_tipo = request.form['vinculacion_tipo']
        vinculacion_detalle = request.form.get('vinculacion_detalle')
        telefono = request.form.get('telefono')
        actividad_desarrollada = request.form.get('actividad_desarrollada')
        codigo_visita = request.form.get('codigo_visita')
        fecha_registro_asistencia = datetime.now().date()

        error = None
        if not nombrecompleto:
            error = 'El nombre completo es obligatorio.'
        elif not tipo_persona:
            error = 'El tipo de persona es obligatorio.'
        elif not vinculacion_tipo:
            error = 'La vinculación es obligatoria.'

        if error:
            return render_template('registro.html', error=error)

        conn = get_connection()
        cursor = conn.cursor()
        query = """
        INSERT INTO asistencia_visita (fecha, numero_documento, nombrecompleto, tipo_persona,
        vinculacion_tipo, vinculacion_detalle, telefono, actividad_desarrollada, codigo_visita)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
        """
        values = (fecha_registro_asistencia, numero_documento, nombrecompleto, tipo_persona,
                  vinculacion_tipo, vinculacion_detalle, telefono, actividad_desarrollada, codigo_visita)

        try:
            cursor.execute(query, values)
            conn.commit()
            cursor.close()
            conn.close()
            return redirect(url_for('registro', mensaje='Asistencia registrada'))
        except Exception as e:
            print(f"Error al insertar en asistencia_visita: {e}")
            conn.rollback()
            cursor.close()
            conn.close()
            error = 'Error al registrar la asistencia.'
            return render_template('registro.html', error=error)

    mensaje = request.args.get('mensaje')
    return render_template('registro.html', mensaje=mensaje)

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        conn = get_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM usuario WHERE username = %s AND password = %s", (username, password))
        user = cursor.fetchone()
        cursor.close()
        conn.close()

        if user:
            session['loggedin'] = True
            session['usuario_id'] = user[0]  # Assuming the first column is the user ID
            return redirect(url_for('autorizacion_form'))
        else:
            error = 'Nombre de usuario o contraseña incorrectos.'
            return render_template('login.html', error=error)
    return render_template('login.html')

@app.route('/autorizacion', methods=['GET', 'POST'])
def autorizacion_form():
    if not session.get('loggedin'):
        return redirect(url_for('login'))

    now = datetime.now()
    hora_llegada_automatica = now.strftime('%H:%M:%S')  # Obtiene la hora actual con segundos
    fecha_automatica = now.strftime('%Y-%m-%d')

    if request.method == 'POST':
        codigo_visita = request.form.get('codigo_visita')
        nombreresponsable = request.form.get('nombreresponsable')
        identificacion = request.form.get('identificacion')
        ocupacion = request.form.get('ocupacion')
        entidad = request.form.get('entidad')
        direccion_barrio = request.form.get('direccion_barrio')
        municipio = request.form.get('municipio')
        telefono = request.form.get('telefono')
        objetivovisita = request.form.get('objetivovisita')
        numeropersonas = request.form.get('numeropersonas', type=int)
        vinculacion = request.form.get('vinculacion')
        hora_salida_str = request.form.get('hora_salida')
        archivo = request.files.get('archivo')

        hora_llegada = datetime.strptime(hora_llegada_automatica, '%H:%M:%S').time()
        fecha = datetime.strptime(fecha_automatica, '%Y-%m-%d').date()

        hora_salida = None
        if hora_salida_str:
            try:
                hora_salida = datetime.strptime(hora_salida_str, '%H:%M').time()
            except ValueError:
                error = 'Formato de hora de salida incorrecto (HH:MM).'
                return render_template('autorizacion.html', error=error,
                                       hora_llegada=hora_llegada_automatica, fecha=fecha_automatica)

        archivo_data = None
        filename = None
        if archivo:
            filename = secure_filename(archivo.filename)
            archivo_data = archivo.read() # Read the file content as bytes

        conn = get_connection()
        cursor = conn.cursor()
        query = """
        INSERT INTO autorizacion_ingreso (codigo_visita, nombreresponsable, identificacion,
        ocupacion, entidad, direccion_barrio, municipio, telefono, objetivovisita,
        numeropersonas, vinculacion, hora_llegada, hora_salida, fecha, archivo, usuario_id)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
        """
        values = (codigo_visita, nombreresponsable, identificacion, ocupacion, entidad,
                  direccion_barrio, municipio, telefono, objetivovisita, numeropersonas,
                  vinculacion, hora_llegada, hora_salida, fecha, archivo_data, 1) # El '1' es el usuario_id fijo

        try:
            cursor.execute(query, values)
            conn.commit()
            cursor.close()
            conn.close()
            return redirect(url_for('autorizacion_form', mensaje='Autorización guardada'))
        except Exception as e:
            print(f"Error al insertar en autorizacion_ingreso: {e}")
            conn.rollback()
            cursor.close()
            conn.close()
            error = "Error al guardar la autorización de ingreso."
            return render_template('autorizacion.html', error=error,
                                   hora_llegada=hora_llegada_automatica, fecha=fecha_automatica)

    mensaje = request.args.get('mensaje')
    return render_template('autorizacion.html', hora_llegada=hora_llegada_automatica, fecha=fecha_automatica, mensaje=mensaje)

@app.route('/logout')
def logout():
    session.pop('loggedin', None)
    session.pop('usuario_id', None)
    return redirect(url_for('login'))

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0")

------------------------------------------------------------
autorizacion.html
------------------------------------------------------------
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulario de Autorización de Ingreso</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
        }
        .container {
            background-color: #fff;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            width: 95%;
            max-width: 1200px;
        }
        h2 {
            color: #333;
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 12px;
        }
        label {
            display: block
            margin-bottom: 3px;
            color: #555;
            font-weight: bold;
            font-size: 0.85em;
        }
        input[type="text"],
        input[type="number"],
        input[type="time"],
        textarea,
        input[type="file"] {
            width: calc(100% - 10px);
            padding: 7px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
            font-size: 14px;
        }
        textarea {
            resize: vertical;
            min-height: 50px;
        }
        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 10px;
        }
        .grid-col-2 {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
        }
        .full-width {
            grid-column: 1 / -1;
        }
        .button-container {
            display: flex;
            justify-content: flex-end;
            margin-top: 20px;
            gap: 10px;
        }
        button {
            background-color: #007bff;
            color: white;
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }
        button:hover {
            background-color: #0056b3;
        }
        .logout-button {
            background-color: #dc3545;
        }
        .logout-button:hover {
            background-color: #c82333;
        }
        .pdf-button {
            background-color: #ffc107;
            color: #212529;
        }
        .pdf-button:hover {
            background-color: #e0a800;
        }
        /* Estilos para la ventana de búsqueda */    
        .search-container {
            background-color: #e9ecef;
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            display: flex;
            gap: 10px;
            align-items: center;
        }
        .search-container label {
            font-weight: normal;
            font-size: 1em;
        }
        .search-container input[type="text"] {
            width: 200px;
        }
        .search-container button {
            background-color: #28a745;
        }
        .search-container button:hover {
            background-color: #1e7e34;
        }
        /* Estilos para mostrar los resultados de la búsqueda */
        .search-results {
            margin-top: 20px;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 15px;
            background-color: #f9f9f9;
        }
        .search-results h3 {
            color: #333;
            margin-top: 0;
        }
        .search-results p {
            margin-bottom: 8px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Formulario de Autorización de Ingreso</h2>

        <div class="search-container">
            <label for="buscar_codigo">Buscar por Código de Visita:</label>
            <input type="text" id="buscar_codigo" name="buscar_codigo" placeholder="Ingrese el código">
            <button type="button" onclick="buscarAutorizacion()">Buscar</button>
        </div>

        <div id="resultados_busqueda" class="search-results" style="display: none;">
            <h3>Resultados de la Búsqueda</h3>
            <div id="detalles_autorizacion">
                </div>
        </div>

        <form action="/autorizacion" method="POST" enctype="multipart/form-data" id="autorizacionForm">
            <div class="grid-container">
                <div class="form-group">
                    <label for="codigo_visita">Código de Visita:</label>
                    <input type="text" id="codigo_visita" name="codigo_visita" required>
                </div>
                <div class="form-group">
                    <label for="nombreresponsable">Nombre del Responsable:</label>                    
                    <input type="text" id="nombreresponsable" name="nombreresponsable">
                </div>
                <div class="form-group">
                    <label for="identificacion">Identificación:</label>                    
                    <input type="text" id="identificacion" name="identificacion">
                </div>
                <div class="form-group">                    
                    <label for="ocupacion">Ocupación:</label>                    
                    <input type="text" id="ocupacion" name="ocupacion">
                </div>
                <div class="form-group">
                    <label for="entidad">Entidad:</label>                    
                    <input type="text" id="entidad" name="entidad">
                </div>
                <div class="form-group">
                    <label for="direccion_barrio">Dirección / Barrio:</label>                    
                    <input type="text" id="direccion_barrio" name="direccion_barrio">
                </div>
                <div class="form-group">
                    <label for="municipio">Municipio:</label>                    
                    <input type="text" id="municipio" name="municipio">
                </div>
                <div class="form-group">
                    <label for="telefono">Teléfono:</label>                    
                    <input type="text" id="telefono" name="telefono">
                </div>
                <div class="form-group">
                    <label for="objetivovisita">Objetivo de la Visita:</label>                    
                    <textarea id="objetivovisita" name="objetivovisita"></textarea>
                </div>
                <div class="form-group">
                    <label for="numeropersonas">Número de Personas:</label>                    
                    <input type="number" id="numeropersonas" name="numeropersonas" min="1">
                </div>
                <div class="form-group">
                    <label for="vinculacion">Vinculación (General):</label>                    
                    <textarea id="vinculacion" name="vinculacion"></textarea>
                </div>
                <div class="form-group">
                    <label for="hora_salida">Hora de Salida (HH:MM):</label>                    
                    <input type="time" id="hora_salida" name="hora_salida" placeholder="HH:MM">
                </div>
                <div class="form-group">
                    <label for="archivo">Archivo Adjunto:</label>                    
                    <input type="file" id="archivo" name="archivo">
                </div>
            </div>
            <div class="button-container">
                <button type="submit">Guardar Autorización</button>
                <button type="button" class="pdf-button" onclick="">Generar PDF</button>
                <button type="button" class="logout-button" onclick="window.location.href = '/registro';">Cerrar Sesión</button>
            </div>
        </form>
        {% if error %}
            <p style="color: red;">{{ error }}</p>
        {% endif %}
        {% if mensaje %}
            <div id="confirmationAlert" style="background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; padding: 10px; border-radius: 4px; margin-top: 10px;">
                {{ mensaje }}
            </div>
            <script>
                setTimeout(function() {
                    document.getElementById('confirmationAlert').style.display = 'none';
                    document.getElementById('autorizacionForm').reset();
                }, 3000);
            </script>
        {% endif %}
    </div>

    <script>
        document.querySelector('.pdf-button').addEventListener('click', function() {
            // La lógica para generar el PDF ya está en el onclick del botón
        });

        document.querySelector('.logout-button').addEventListener('click', function() {
            window.location.href = '/logout'; // Corregido a la ruta de logout
        });

    </script>
</body>                     
<html/>

-------------------------------------------------------------
creación de pdf
-------------------------------------------------------------
from flask import Flask, send_file, session, redirect, url_for
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch
from io import BytesIO
from datetime import datetime
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.platypus import Paragraph

# ... (tu configuración de Flask y conexión a la base de datos)

@app.route('/generar_pdf/<codigo_visita>')
def generar_pdf(codigo_visita):
    if not session.get('loggedin'):
        return redirect(url_for('login'))

    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM autorizacion_ingreso WHERE codigo_visita = %s", (codigo_visita,))
    autorizacion = cursor.fetchone()
    cursor.close()
    conn.close()

    if not autorizacion:
        return "Autorización no encontrada."

    output = BytesIO()
    c = canvas.Canvas(output, pagesize=letter)
    styles = getSampleStyleSheet()

    # --- Aquí empezaremos a dibujar los elementos ---
    # --- Encabezado ---
    try:
        c.drawImage("logo_jardin.png", 0.5 * inch, 7.5 * inch, width=1 * inch, height=1 * inch)
    except:
        print("No se pudo cargar el logo.")

    c.setFont("Helvetica-Bold", 10)
    c.drawString(1.6 * inch, 7.9 * inch, "MACROPROCESO MISIONAL")
    c.drawString(1.6 * inch, 7.7 * inch, "PROCESO: DOCENCIA")
    c.drawString(1.6 * inch, 7.5 * inch, "FORMATO SOLICITUD DE AUTORIZACIÓN PARA INGRESO")

    c.drawRightString(7.9 * inch, 7.9 * inch, "F-JB-001")
    c.drawRightString(7.9 * inch, 7.7 * inch, "VERSIÓN: 01")
    c.drawRightString(7.9 * inch, 7.5 * inch, "Página 1 de 1")

    # Línea horizontal superior
    c.line(0.5 * inch, 8.1 * inch, 8.0 * inch, 8.1 * inch)
    # --- Recuadro Nombre, Identificación, Ocupación ---
    y_pos = 6.8 * inch
    height = 0.6 * inch
    c.rect(0.5 * inch, y_pos - height, 7.5 * inch, height)

    c.setFont("Helvetica-Bold", 8)
    c.drawString(0.6 * inch, y_pos - 0.2 * inch, "NOMBRE DEL RESPONSABLE:")
    c.drawString(3.0 * inch, y_pos - 0.2 * inch, "IDENTIFICACIÓN:")
    c.drawString(5.5 * inch, y_pos - 0.2 * inch, "OCUPACIÓN:")

    c.setFont("Helvetica", 8)
    c.drawString(0.6 * inch, y_pos - 0.4 * inch, autorizacion[2] if autorizacion[2] else "")
    c.drawString(3.0 * inch, y_pos - 0.4 * inch, autorizacion[3] if autorizacion[3] else "")
    c.drawString(5.5 * inch, y_pos - 0.4 * inch, autorizacion[4] if autorizacion[4] else "")

    # Líneas verticales dentro del recuadro
    c.line(2.8 * inch, y_pos - height, 2.8 * inch, y_pos)
    c.line(5.3 * inch, y_pos - height, 5.3 * inch, y_pos)
    # --- Recuadro Entidad, Dirección ---
    y_pos -= 0.7 * inch
    c.rect(0.5 * inch, y_pos - height, 7.5 * inch, height)

    c.setFont("Helvetica-Bold", 8)
    c.drawString(0.6 * inch, y_pos - 0.2 * inch, "ENTIDAD:")
    c.drawString(3.0 * inch, y_pos - 0.2 * inch, "DIRECCIÓN / BARRIO:")

    c.setFont("Helvetica", 8)
    c.drawString(0.6 * inch, y_pos - 0.4 * inch, autorizacion[5] if autorizacion[5] else "")
    c.drawString(3.0 * inch, y_pos - 0.4 * inch, autorizacion[6] if autorizacion[6] else "")

    # Línea vertical dentro del recuadro
    c.line(2.8 * inch, y_pos - height, 2.8 * inch, y_pos)
    # --- Recuadro Municipio, Teléfono ---
    y_pos -= 0.7 * inch
    c.rect(0.5 * inch, y_pos - height, 7.5 * inch, height)

    c.setFont("Helvetica-Bold", 8)
    c.drawString(0.6 * inch, y_pos - 0.2 * inch, "MUNICIPIO:")
    c.drawString(3.0 * inch, y_pos - 0.2 * inch, "No. TELEFÓNICO:")

    c.setFont("Helvetica", 8)
    c.drawString(0.6 * inch, y_pos - 0.4 * inch, autorizacion[7] if autorizacion[7] else "")
    c.drawString(3.0 * inch, y_pos - 0.4 * inch, autorizacion[8] if autorizacion[8] else "")

    # Línea vertical dentro del recuadro
    c.line(2.8 * inch, y_pos - height, 2.8 * inch, y_pos)
    # --- Recuadro Objetivo de la Visita ---
    y_pos -= 1.1 * inch
    height = 1.0 * inch
    c.rect(0.5 * inch, y_pos - height, 7.5 * inch, height)

    c.setFont("Helvetica-Bold", 8)
    c.drawString(0.6 * inch, y_pos - 0.2 * inch, "OBJETIVO DE LA PRACTICA O VISITA:")

    c.setFont("Helvetica", 8)
    objetivo = autorizacion[9] if autorizacion[9] else ""
    p_objetivo = Paragraph(objetivo, styles['Normal'])
    p_objetivo.wrapOn(c, 7.3 * inch, 0.8 * inch)
    p_objetivo.drawOn(c, 0.6 * inch, y_pos - 0.8 * inch) # Ajustar la posición Y
    # --- Recuadro Número de Personas, Facultad, Horas ---
    y_pos -= 1.6 * inch
    height = 1.4 * inch
    c.rect(0.5 * inch, y_pos - height, 7.5 * inch, height)

    c.setFont("Helvetica-Bold", 8)
    c.drawString(0.6 * inch, y_pos - 0.2 * inch, "Número de personas que ingresan:")
    c.drawString(0.6 * inch, y_pos - 0.4 * inch, "Facultad - Semestre - Institución:")
    c.drawString(0.6 * inch, y_pos - 0.6 * inch, "Hora de llegada:")
    c.drawString(3.0 * inch, y_pos - 0.6 * inch, "Hora de salida:")

    c.setFont("Helvetica", 8)
    c.drawString(4.5 * inch, y_pos - 0.2 * inch, str(autorizacion[10]) if autorizacion[10] else "")
    # Aquí podrías añadir la lógica para "Facultad - Semestre - Institución" si tienes esos datos

    hora_llegada_str = autorizacion[12].strftime('%H:%M:%S') if isinstance(autorizacion[12], time) and autorizacion[12] else "N/A"
    hora_salida_str = autorizacion[13].strftime('%H:%M:%S') if isinstance(autorizacion[13], time) and autorizacion[13] else "N/A"
    c.drawString(0.6 * inch, y_pos - 0.8 * inch, hora_llegada_str)
    c.drawString(3.0 * inch, y_pos - 0.8 * inch, hora_salida_str)

    # Línea vertical dentro del recuadro para las horas
    c.line(2.8 * inch, y_pos - height, 2.8 * inch, y_pos)
    # --- Recuadro Recomendaciones ---
    y_pos -= 1.6 * inch
    height = 1.4 * inch
    c.rect(0.5 * inch, y_pos - height, 7.5 * inch, height)

    c.setFont("Helvetica-Bold", 8)
    c.drawString(0.6 * inch, y_pos - 0.2 * inch, "Recomendaciones:")

    c.setFont("Helvetica", 7)
    recomendaciones = """- No salirse de los senderos para evitar cualquier tipo de accidente.
- Disponga de ropa adecuada para el recorrido o permanencia (Pantalón largo, sudadera, gorra, tenis botas).
- En tiempo de invierno utilizar preferiblemente botas pantaneras.
- No extraer material vegetal ni semillas del Jardín Botánico.
- No arrojar basura en los senderos durante el recorrido.
- No cazar.
- No realizar fogatas o incendios."""
    p_recom = Paragraph(recomendaciones, styles['Normal'])
    p_recom.wrapOn(c, 7.3 * inch, 1.2 * inch)
    p_recom.drawOn(c, 0.6 * inch, y_pos - 1.3 * inch) # Ajustar la posición Y
    # --- Pie de Página y Firmas ---
    c.setFont("Helvetica", 8)
    c.drawString(0.6 * inch, 0.6 * inch, f"En Mocoa a los _____ días del mes de ___________ de {datetime.now().year}")

    c.setFont("Helvetica-Bold", 10)
    c.drawCentredString(4.25 * inch, 0.2 * inch, "AUTORIZACIÓN")
    c.line(0.6 * inch, 0.0 * inch, 3.0 * inch, 0.0 * inch)
    c.setFont("Helvetica", 8)
    c.drawString(0.6 * inch, -0.2 * inch, "Firma del solicitante")
    c.drawRightString(7.9 * inch, -0.2 * inch, "HERNAN WILLIAM BURGOS N.")
    c.drawRightString(7.9 * inch, -0.4 * inch, "Técnico Operario \"JARBOTA\"")
    
    # ---------------------------------------------

    c.save()
    output.seek(0)
    return send_file(output, mimetype='application/pdf', as_attachment=True, download_name=f"autorizacion_{codigo_visita}.pdf")

# ... (tu bloque if __name__ == "__main__":)